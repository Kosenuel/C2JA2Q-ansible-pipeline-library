// deploy/Jenkinsfile
pipeline {
    agent any
    
    environment {
        ANSIBLE_CONFIG = "${WORKSPACE}/deploy/ansible.cfg"
    }
    
    parameters {
        choice(
            name: 'environment',
            choices: ['dev', 'staging', 'prod'],
            description: 'Select deployment environment'
        )
        
        string(
            name: 'branch',
            defaultValue: 'main',
            description: 'Branch to build'
        )
    }

    stages {
        stage('Initial Cleanup'){
            steps {
                cleanWs()
                checkout scm
            }
        }

        stage('Prepare Dependencies'){
            steps {
                sh '''
                    php -v
                    composer --version
                    echo "Composer Updated"
                    composer install
                    echo "Composer Dependencies Installed"
                    cp .env.example .env
                    php artisan migrate
                    php artisan db:seed
                    php artisan key:generate
                    '''

            }
        }

        stage('Execute Tests'){
            steps {
                sh '''
                    sed -i "s/^APP_KEY=.*/APP_KEY=$(php artisan key:generate --show)/" .env
                    mkdir -p storage/framework/sessions
                    mkdir -p storage/framework/cache
                    mkdir -p storage/framework/views
                    echo "APP_KEY Updated"
                    echo "Running Tests"
                    ./vendor/bin/phpunit --log-junit tests/junit.xml
                '''
            }

            post {
                always {
                    junit 'tests/junit.xml'
                }
            }
        }

        stage ('Code Analysis'){
            steps{
                sh '''
                    ls -la /home/ubuntu/.config/composer/vendor/bin/
                    /home/ubuntu/.config/composer/vendor/bin/phploc app/ --log-csv build/logs/phploc.csv
                    phploc --version
                    '''
            }
        }
        
    }
}
